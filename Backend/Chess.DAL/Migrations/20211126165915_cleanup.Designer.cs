// <auto-generated />
using System;
using Chess.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chess.DAL.Migrations
{
    [DbContext(typeof(ChessDbContext))]
    [Migration("20211126165915_cleanup")]
    partial class cleanup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chess.Models.Entities.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Chess.Models.Entities.Lobby", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LobbyConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LobbyConfigId");

                    b.ToTable("Lobbies");
                });

            modelBuilder.Entity("Chess.Models.Entities.LobbyConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("GameStarted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("LobbyConfigs");
                });

            modelBuilder.Entity("Chess.Models.Entities.Move", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NewColumn")
                        .HasColumnType("int");

                    b.Property<int>("NewRow")
                        .HasColumnType("int");

                    b.Property<int>("PieceType")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("Chess.Models.Entities.UserBase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LobbyConfigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Side")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LobbyConfigId");

                    b.ToTable("UserData");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserBase");
                });

            modelBuilder.Entity("Chess.Models.Entities.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LobbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NewColumn")
                        .HasColumnType("int");

                    b.Property<int>("NewRow")
                        .HasColumnType("int");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LobbyId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("Chess.Models.Entities.RegisteredUser", b =>
                {
                    b.HasBaseType("Chess.Models.Entities.UserBase");

                    b.Property<string>("UserProfileId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserData");

                    b.HasDiscriminator().HasValue("RegisteredUser");
                });

            modelBuilder.Entity("Chess.Models.Entities.ChatMessage", b =>
                {
                    b.HasOne("Chess.Models.Entities.Lobby", "Lobby")
                        .WithMany("Messages")
                        .HasForeignKey("LobbyId");

                    b.HasOne("Chess.Models.Entities.UserBase", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Lobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chess.Models.Entities.Lobby", b =>
                {
                    b.HasOne("Chess.Models.Entities.LobbyConfig", "LobbyConfig")
                        .WithMany()
                        .HasForeignKey("LobbyConfigId");

                    b.Navigation("LobbyConfig");
                });

            modelBuilder.Entity("Chess.Models.Entities.LobbyConfig", b =>
                {
                    b.HasOne("Chess.Models.Entities.RegisteredUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Chess.Models.Entities.Move", b =>
                {
                    b.HasOne("Chess.Models.Entities.Lobby", "Lobby")
                        .WithMany("Moves")
                        .HasForeignKey("LobbyId");

                    b.HasOne("Chess.Models.Entities.UserBase", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Lobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chess.Models.Entities.UserBase", b =>
                {
                    b.HasOne("Chess.Models.Entities.LobbyConfig", null)
                        .WithMany("Players")
                        .HasForeignKey("LobbyConfigId");
                });

            modelBuilder.Entity("Chess.Models.Entities.Vote", b =>
                {
                    b.HasOne("Chess.Models.Entities.Lobby", "Lobby")
                        .WithMany("Votes")
                        .HasForeignKey("LobbyId");

                    b.HasOne("Chess.Models.Entities.UserBase", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Lobby");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chess.Models.Entities.Lobby", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Moves");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("Chess.Models.Entities.LobbyConfig", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
